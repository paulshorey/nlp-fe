{"mappings":"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","sources":["packages/colorful-console-logger/src/cconsole.js","packages/colorful-console-logger/src/index.js","packages/colorful-console-logger/src/function/CConsoleLog.js","packages/colorful-console-logger/src/function/destroyCircular.js","packages/colorful-console-logger/src/function/serializeError.js"],"sourcesContent":["/*\n * This is for use in Browser - however it will also work in Node (ESM) including Webpack\n */\nconst cconsoleInit = require(\"./index.js\")\n\nif (typeof window === 'object') {\n  window.cconsole = cconsoleInit()\n}\n\nmodule.exports = cconsoleInit()\n","const CConsoleLog = require( \"./function/CConsoleLog\")\n\n/**\n * Log to console, and optionally to your custom cloud functions\n *    In console, will color code each message:\n *        info: green\n *        warn: orange\n *        error: red\n *    Other methods (log, debug, trace, table, are not colored,\n *    because the coloring breaks Chrome developer tools console message)\n *\n * @param options {object} - options and settings\n *    See github project for more documentation and examples.\n * @param options.logToCloud {object} - an object of {key:value{function},} pairs\n *    Ex: {log:function(){}, info:function(){}, etc}\n *    Tested, and works well with LogDNA. `options.logToCloud = logdna.createLogger()`\n *    See github project for more documentation and examples.\n */\nconst cconsoleInit = function(options={}) {\n  // so different actions (log/info/debug/etc) can communicate with eachother:\n  let sharedContext = {}\n  // log\n  let cconsole = {\n    // custom (colorful) loggers\n    log: CConsoleLog.bind({ action: \"log\", options, sharedContext }),\n    info: CConsoleLog.bind({ action: \"info\", options, sharedContext }),\n    debug: CConsoleLog.bind({ action: \"debug\", options, sharedContext }),\n    warn: CConsoleLog.bind({ action: \"warn\", options, sharedContext }),\n    error_message: CConsoleLog.bind({ action: \"error_message\", options, sharedContext }),\n    error: CConsoleLog.bind({ action: \"error\", options, sharedContext }),\n    trace: CConsoleLog.bind({ action: \"trace\", options, sharedContext }),\n    success: CConsoleLog.bind({ action: \"success\", options, sharedContext }),\n    subtle: CConsoleLog.bind({ action: \"subtle\", options, sharedContext }),\n    // pass-through system debugging loggers\n    clear: console.clear,\n    time: console.time,\n    table: console.table,\n    timeEnd: console.timeEnd,\n    timeLog: console.timeLog,\n    assert: console.assert,\n    count: console.count,\n    countReset: console.countReset,\n    dir: console.dir,\n    dirxml: console.dirxml,\n    group: console.group,\n    groupCollapsed: console.groupCollapsed,\n    groupEnd: console.groupEnd\n  }\n  // extra pass-through (default) loggers (non-standard)\n  if (console.profile) {\n    cconsole.profile = console.profile\n  }\n  if (console.profileEnd) {\n    cconsole.profileEnd = console.profileEnd\n  }\n  if (console.timeStamp) {\n    cconsole.timeStamp = console.timeStamp\n  }\n  // return console\n  return cconsole\n}\n\n/*\n * Export cconsole\n */\nmodule.exports = cconsoleInit\n","const destroyCircular = require(\"./destroyCircular\");\nconst serializeError = require(\"./serializeError\");\n\n// use \"browser\" colors if in browser\nlet NODEJSCOLORS = typeof window !== \"object\" && typeof process === \"object\";\n// also use \"browser\" colors if in NodeJS with \"--inspect\" or \"--inspect-brk\" flag\n// if (NODEJSCOLORS && process.execArgv.join().includes(\"--inspect\")) {\n//   NODEJSCOLORS = false\n// }\n\n/*\n * Log to console\n */\nmodule.exports = function () {\n  let args = [...arguments];\n  // optionally, pass log-To-Cloud versions of each log action (log,info,error,etc.)\n  if (!this.options) this.options = {};\n  let { logToCloud = {}, useTrace = false, useColor = true, separateTypes = false } = this.options;\n\n  /*\n   * option:\n   * trace file:line, where log originated\n   */\n  let trace = \"\";\n  if (useTrace) {\n    let stack = [];\n    let err = new Error();\n    if (err.stack) {\n      stack = err.stack.split(\"\\n\");\n      if (stack[2]) {\n        // determine file:line which called this console log\n        let str = stack[2];\n        let i_end = str.lastIndexOf(\":\");\n        let i_start_before = str.lastIndexOf(\"/\", i_end - 20) + 1;\n        trace = `(${str.substring(i_start_before, i_end)})`;\n      }\n    }\n  }\n\n  /*\n   * optimize message view\n   */\n  // let hasError = false\n  let a = 0;\n  while (a < args.length) {\n    // if first argument is string, give it a colon \": \"\n    if (a === 0 && typeof args[a] === \"string\") {\n      if (args.length > a + 1) {\n        args[a] += \": \";\n      } else {\n        args[a] += \" \";\n      }\n    }\n    // fix object from being printed as \"[object Object]\"\n    if (typeof args[a] === \"object\") {\n      if (args[a] instanceof Error) {\n        // error object\n        // hasError = true\n        try {\n          // going to assume this is an Error\n          args[a] = serializeError(args[a]);\n          if (typeof args[a] === \"object\") {\n            args[a] = serializeError(args[a].stack);\n          }\n        } catch (e) {\n          // console.error(e)\n        }\n      } else {\n        // regular object\n        // serialize so it does not display changes made after log has printed\n        args[a] = JSON.parse(JSON.stringify(destroyCircular(args[a], [])));\n      }\n    }\n    a++;\n  }\n\n  /*\n   * error - prepare message for output as string\n   */\n  let error_message = \"\";\n  if (this.action === \"error_message\") {\n    args[0] = error_message =\n      args[0] && typeof args[0] === \"string\"\n        ? args[0]\n            .split(\"\\n\")\n            .slice(0, 2)\n            .map((str) => str.replace(/\\/.+\\//g, \"\"))\n            .toString()\n        : \"error\";\n    this.action = \"error\";\n  }\n\n  /*\n   * color1 messages\n   *\n   * on NODE JS\n   * https://en.wikipedia.org/wiki/ANSI_escape_code#Colors <- use \"FG Code\" for text, \"BG Code\" for background\n   *\n   * \\x1b[41m     \\x1b[33m       %s        \\x1b[0m\n   * red bg       yellow text    string    escape for next line\n   *\n   * \\x1b[47m           \\x1b[30m       %s        \\x1b[0m\n   * light grey bg      black text     string    escape for next line\n   */\n  let action = this.action;\n  let color1 = \"\";\n  let color2 = \"\";\n  if (useColor && typeof args[0] === \"string\") {\n    /*\n     * use by NODEJS in terminal\n     */\n    if (NODEJSCOLORS) {\n      switch (this.action) {\n        case \"error\":\n          color1 = \"\\x1b[41m\\x1b[33m%s\\x1b[0m\";\n          break;\n        case \"warn\":\n          color1 = \"\\x1b[43m\\x1b[30m%s\\x1b[0m\";\n          break;\n        case \"info\":\n          color1 = \"\\x1b[46m\\x1b[30m%s\\x1b[0m\";\n          break;\n        case \"debug\":\n          color1 = \"\\x1b[45m\\x1b[30m%s\\x1b[0m\";\n          break;\n        case \"trace\":\n          color1 = \"\\x1b[106m\\x1b[30m%s\\x1b[0m\";\n          break;\n        case \"success\":\n          color1 = \"\\x1b[42m\\x1b[30m%s\\x1b[0m\";\n          this.action = \"log\";\n          break;\n        case \"subtle\":\n          color1 = \"\\x1b[40m\\x1b[90m%s\\x1b[0m\";\n          this.action = \"log\";\n          break;\n      }\n    } else {\n      /*\n       * for use in BROWSER\n       */\n      switch (action) {\n        case \"error\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:red; color:yellow\");\n          break;\n        case \"warn\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:yellow; color:black\");\n          break;\n        case \"log\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:cyan; color:black\");\n          break;\n        case \"info\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:teal; color:black\");\n          break;\n        case \"debug\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:magenta; color:black\");\n          break;\n        case \"trace\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:cyan; color:black\");\n          break;\n        case \"success\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"background:lawngreen; color:black\");\n          break;\n        case \"subtle\":\n          args[0] = \"%c\" + args[0];\n          args.splice(1, 0, \"color:grey\");\n          break;\n      }\n    }\n  }\n\n  /*\n   * custom actions\n   */\n  switch (action) {\n    case \"success\":\n      action = \"log\";\n      break;\n    case \"subtle\":\n      action = \"log\";\n      break;\n  }\n\n  /*\n   * Add space between different types (groups) of messages\n   *    TODO: maybe upgrade this to use console.group in browser\n   */\n  if (separateTypes) {\n    if (action + this.action !== this.sharedContext.last_action) {\n      console.log(\"\");\n    }\n  }\n\n  /*\n   * Add trace (file-name:line-number)\n   */\n  // log color\n  if (color1) {\n    if (trace) {\n      // color1, trace\n      args = [color1, ...args, trace, color2];\n    } else {\n      // color1, no trace\n      args = [color1, ...args, color2];\n    }\n  } else if (trace) {\n    // no color1, trace\n    args = [...args, trace];\n  }\n\n  /*\n   * Log message to console\n   * use specified action (log, info, debug, warn, etc)\n   */\n  console[action](...args);\n\n  /*\n   * Log original content to cloud\n   */\n  if (logToCloud[action]) {\n    logToCloud[action](...arguments, trace);\n  }\n\n  /*\n   * Add linebreak when different actions back to back\n   * but no linebreak when same action\n   */\n  this.sharedContext.last_action = action + this.action;\n\n  /*\n   * return\n   */\n  if (error_message) {\n    return error_message;\n  }\n};\n","const destroyCircular = (from, seen) => {\n  // null seen as object\n  if (from === null || from === undefined) {\n    return from\n  }\n  // setup output variable\n  const to = Array.isArray(from) ? [] : {}\n  // reading\n  seen.push(from)\n  // iterate input\n  for (const [key, value] of Object.entries(from)) {\n    if (typeof value === 'function') {\n      continue\n    }\n    if (!value || typeof value !== 'object') {\n      to[key] = value\n      continue\n    }\n    if (!seen.includes(from[key])) {\n      to[key] = destroyCircular(from[key], seen.slice())\n      continue\n    }\n    to[key] = '[Circular]'\n  }\n  const commonProperties = [\n    'name',\n    'message',\n    'stack',\n    'code'\n  ]\n  for (const property of commonProperties) {\n    if (typeof from[property] === 'string') {\n      to[property] = from[property]\n    }\n  }\n  return to\n}\nmodule.exports = destroyCircular\n","const destroyCircular = require('./destroyCircular')\n\nmodule.exports = (value) => {\n  if (typeof value === 'object') {\n    return destroyCircular(value, [])\n  }\n  // People sometimes throw things besides Error objects…\n  if (typeof value === 'function') {\n    // `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n    return `[Function: ${(value.name || 'anonymous')}]`\n  }\n  return value\n}\n"],"names":[],"version":3,"file":"cconsoleInit.js.map","sourceRoot":"../../../"}