{"version":3,"sources":["function/destroyCircular.js","function/serializeError.js","../node_modules/process/browser.js","function/CConsoleLog.js","index.js","cconsole.js"],"names":["destroyCircular","from","seen","to","Array","isArray","push","Object","entries","key","value","includes","slice","commonProperties","property","module","exports","require","name","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","arguments","i","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","serializeError","NODEJSCOLORS","window","options","logToCloud","useTrace","useColor","separateTypes","trace","stack","err","split","str","i_end","lastIndexOf","i_start_before","substring","a","JSON","parse","stringify","error_message","action","map","replace","toString","color1","splice","sharedContext","last_action","console","log","color2","CConsoleLog","cconsoleInit","cconsole","bind","info","debug","warn","error","success","subtle","clear","time","table","timeEnd","timeLog","assert","count","countReset","dirxml","group","groupCollapsed","groupEnd","profile","profileEnd","timeStamp"],"mappings":";AAqCA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EArCA,IAAMA,EAAkB,SAAlBA,EAAmBC,EAAMC,GAEzBD,GAAAA,MAAAA,EACKA,OAAAA,EAGHE,IAAAA,EAAKC,MAAMC,QAAQJ,GAAQ,GAAK,GAEtCC,EAAKI,KAAKL,GAEiBM,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAOC,QAAQP,GAAO,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAArCQ,EAAqC,EAAA,GAAhCC,EAAgC,EAAA,GAC1B,mBAAVA,IAGNA,GAA0B,WAAjB,EAAOA,GAIhBR,EAAKS,SAASV,EAAKQ,IAIxBN,EAAGM,GAAO,aAHRN,EAAGM,GAAOT,EAAgBC,EAAKQ,GAAMP,EAAKU,SAJ1CT,EAAGM,GAAOC,GAeSG,IANjBA,IAMiBA,EAAAA,EAAAA,EANE,CACvB,OACA,UACA,QACA,QAEuC,EAAA,EAAA,OAAA,IAAA,CAA9BC,IAAAA,EAAN,EAAA,GAC2B,iBAAnBb,EAAKa,KACdX,EAAGW,GAAYb,EAAKa,IAGjBX,OAAAA,GAETY,OAAOC,QAAUhB;;ACnCjB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAFA,IAAMA,EAAkBiB,QAAQ,qBAEhCF,OAAOC,QAAU,SAACN,GACZ,MAAiB,WAAjB,EAAOA,GACFV,EAAgBU,EAAO,IAGX,mBAAVA,EAEaA,cAAAA,OAAAA,EAAMQ,MAAQ,YAApC,KAEKR;;;ACVT,IAOIS,EACAC,EARAC,EAAUN,OAAOC,QAAU,GAU/B,SAASM,IACC,MAAA,IAAIC,MAAM,mCAEpB,SAASC,IACC,MAAA,IAAID,MAAM,qCAsBpB,SAASE,EAAWC,GACZP,GAAAA,IAAqBQ,WAEdA,OAAAA,WAAWD,EAAK,GAGvB,IAACP,IAAqBG,IAAqBH,IAAqBQ,WAEzDA,OADPR,EAAmBQ,WACZA,WAAWD,EAAK,GAEvB,IAEOP,OAAAA,EAAiBO,EAAK,GAC/B,MAAME,GACA,IAEOT,OAAAA,EAAiBU,KAAK,KAAMH,EAAK,GAC1C,MAAME,GAEGT,OAAAA,EAAiBU,KAAK,KAAMH,EAAK,KAMpD,SAASI,EAAgBC,GACjBX,GAAAA,IAAuBY,aAEhBA,OAAAA,aAAaD,GAGpB,IAACX,IAAuBI,IAAwBJ,IAAuBY,aAEhEA,OADPZ,EAAqBY,aACdA,aAAaD,GAEpB,IAEOX,OAAAA,EAAmBW,GAC5B,MAAOH,GACD,IAEOR,OAAAA,EAAmBS,KAAK,KAAME,GACvC,MAAOH,GAGER,OAAAA,EAAmBS,KAAK,KAAME,MAjEhD,WACO,IAEIZ,EADsB,mBAAfQ,WACYA,WAEAL,EAEzB,MAAOM,GACLT,EAAmBG,EAEnB,IAEIF,EADwB,mBAAjBY,aACcA,aAEAR,EAE3B,MAAOI,GACLR,EAAqBI,GAjB5B,GAwED,IAEIS,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAaK,OACbJ,EAAQD,EAAaM,OAAOL,GAE5BE,GAAc,EAEdF,EAAMI,QACNE,KAIR,SAASA,IACDL,IAAAA,EAAAA,CAGAM,IAAAA,EAAUhB,EAAWY,GACzBF,GAAW,EAGLO,IADFA,IAAAA,EAAMR,EAAMI,OACVI,GAAK,CAGA,IAFPT,EAAeC,EACfA,EAAQ,KACCE,EAAaM,GACdT,GACAA,EAAaG,GAAYO,MAGjCP,GAAc,EACdM,EAAMR,EAAMI,OAEhBL,EAAe,KACfE,GAAW,EACXL,EAAgBW,IAiBpB,SAASG,EAAKlB,EAAKmB,GACVnB,KAAAA,IAAMA,EACNmB,KAAAA,MAAQA,EAYjB,SAASC,KA5BTzB,EAAQ0B,SAAW,SAAUrB,GACrBsB,IAAAA,EAAO,IAAI5C,MAAM6C,UAAUX,OAAS,GACpCW,GAAAA,UAAUX,OAAS,EACd,IAAA,IAAIY,EAAI,EAAGA,EAAID,UAAUX,OAAQY,IAClCF,EAAKE,EAAI,GAAKD,UAAUC,GAGhChB,EAAM5B,KAAK,IAAIsC,EAAKlB,EAAKsB,IACJ,IAAjBd,EAAMI,QAAiBH,GACvBV,EAAWe,IASnBI,EAAKO,UAAUR,IAAM,WACZjB,KAAAA,IAAI0B,MAAM,KAAM,KAAKP,QAE9BxB,EAAQgC,MAAQ,UAChBhC,EAAQiC,SAAU,EAClBjC,EAAQkC,IAAM,GACdlC,EAAQmC,KAAO,GACfnC,EAAQoC,QAAU,GAClBpC,EAAQqC,SAAW,GAInBrC,EAAQsC,GAAKb,EACbzB,EAAQuC,YAAcd,EACtBzB,EAAQwC,KAAOf,EACfzB,EAAQyC,IAAMhB,EACdzB,EAAQ0C,eAAiBjB,EACzBzB,EAAQ2C,mBAAqBlB,EAC7BzB,EAAQ4C,KAAOnB,EACfzB,EAAQ6C,gBAAkBpB,EAC1BzB,EAAQ8C,oBAAsBrB,EAE9BzB,EAAQ+C,UAAY,SAAUlD,GAAe,MAAA,IAE7CG,EAAQgD,QAAU,SAAUnD,GAClB,MAAA,IAAIK,MAAM,qCAGpBF,EAAQiD,IAAM,WAAqB,MAAA,KACnCjD,EAAQkD,MAAQ,SAAUC,GAChB,MAAA,IAAIjD,MAAM,mCAEpBF,EAAQoD,MAAQ,WAAoB,OAAA;;;AC1KpC,IAAA,EAAA,QAAA,WAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAbA,IAAMzE,EAAkBiB,QAAS,qBAC3ByD,EAAiBzD,QAAS,oBAG5B0D,EAAiC,YAAXC,oBAAAA,OAAAA,YAAAA,EAAAA,UAAwC,iBAAVvD,IAAAA,EAAAA,YAAAA,EAAAA,IASxDN,OAAOC,QAAU,WAAY,IAAA,EACvBgC,EAAWC,MAAAA,UAAAA,MAAAA,KAAAA,WAEV,KAAK4B,UAAS,KAAKA,QAAQ,IACoD,IAAA,EAAA,KAAKA,QAAnFC,EAAAA,EAAAA,WAAAA,OAAa,IAAA,EAAA,GAJQ,EAIJC,EAAAA,EAAAA,SAAAA,OAAW,IAAA,GAJP,EAIcC,EAAAA,EAAAA,SAAAA,OAAW,IAAA,GAJzB,EAI+BC,EAAAA,EAAAA,cAAAA,OAAgB,IAAA,GAJ/C,EAUvBC,EAAQ,GACRH,GAAAA,EAAU,CACRI,IAAAA,EAAQ,GACRC,EAAM,IAAI7D,MACV6D,GAAAA,EAAID,QACNA,EAAQC,EAAID,MAAME,MAAM,OACd,GAAI,CAERC,IAAAA,EAAMH,EAAM,GACZI,EAAQD,EAAIE,YAAY,KACxBC,EAAiBH,EAAIE,YAAY,IAAKD,EAAQ,IAAM,EACxDL,EAAYI,IAAAA,OAAAA,EAAII,UAAUD,EAAgBF,GAA1C,MAUCI,IADHA,IAAAA,EAAI,EACDA,EAAI3C,EAAKV,QAAQ,CAUlB,GARM,IAANqD,GAA8B,iBAAZ3C,EAAK2C,KACrB3C,EAAKV,OAASqD,EAAI,EACpB3C,EAAK2C,IAAM,KAEX3C,EAAK2C,IAAM,KAIQ,WAAnB,EAAO3C,EAAK2C,IACV3C,GAAAA,EAAK2C,aAAcpE,MAGjB,IAEFyB,EAAK2C,GAAKjB,EAAe1B,EAAK2C,IACP,WAAnB,EAAO3C,EAAK2C,MACd3C,EAAK2C,GAAKjB,EAAe1B,EAAK2C,GAAGR,QAEnC,MAAOvD,SAMToB,EAAK2C,GAAKC,KAAKC,MAAMD,KAAKE,UAAU9F,EAAgBgD,EAAK2C,GAAI,MAGjEA,IAMEI,IAAAA,EAAgB,GACF,kBAAd,KAAKC,SACPhD,EAAK,GAAK+C,EAAiB/C,EAAK,IAAyB,iBAAZA,EAAK,GAAmBA,EAAK,GAAGqC,MAAM,MAAMzE,MAAM,EAAE,GAAGqF,IAAI,SAAAX,GAAKA,OAAAA,EAAIY,QAAQ,UAAU,MAAKC,WAAa,QAChJH,KAAAA,OAAS,SAeZA,IAAAA,EAAS,KAAKA,OACdI,EAAS,GAETpB,GAAAA,GAA+B,iBAAZhC,EAAK,GAItB2B,GAAAA,EACM,OAAA,KAAKqB,QACN,IAAA,QACHI,EAAS,mBACT,MACG,IAAA,OACHA,EAAS,mBACT,MACG,IAAA,OACHA,EAAS,mBACT,MACG,IAAA,QACHA,EAAS,mBACT,MACG,IAAA,QACHA,EAAS,oBACT,MACG,IAAA,UACHA,EAAS,mBACJJ,KAAAA,OAAS,MACd,MACG,IAAA,SACHI,EAAS,mBACJJ,KAAAA,OAAS,WAOVA,OAAAA,GACD,IAAA,QACHhD,EAAK,GAAK,KAAOA,EAAK,GACtBA,EAAKqD,OAAO,EAAG,EAAG,gCAClB,MACG,IAAA,OACHrD,EAAK,GAAK,KAAOA,EAAK,GACtBA,EAAKqD,OAAO,EAAG,EAAG,kCAClB,MACG,IAAA,OACHrD,EAAK,GAAK,KAAOA,EAAK,GACtBA,EAAKqD,OAAO,EAAG,EAAG,gCAClB,MACG,IAAA,QACHrD,EAAK,GAAK,KAAOA,EAAK,GACtBA,EAAKqD,OAAO,EAAG,EAAG,mCAClB,MACG,IAAA,QACHrD,EAAK,GAAK,KAAOA,EAAK,GACtBA,EAAKqD,OAAO,EAAG,EAAG,gCAClB,MACG,IAAA,UACHrD,EAAK,GAAK,KAAOA,EAAK,GACtBA,EAAKqD,OAAO,EAAG,EAAG,qCAClB,MACG,IAAA,SACHrD,EAAK,GAAK,KAAOA,EAAK,GACtBA,EAAKqD,OAAO,EAAG,EAAG,cASlBL,OAAAA,GACD,IAAA,UAGA,IAAA,SACHA,EAAS,MAqDTD,GA7CAd,GACEe,EAAS,KAAKA,SAAW,KAAKM,cAAcC,aAC9CC,QAAQC,IAAI,IAQZL,EAGApD,EAAQoD,CAAAA,GAAWpD,OAAAA,EAAAA,GAFjBkC,EAEuBA,CAAAA,EAjGhB,IAoGgBwB,CApGhB,KAsGFxB,IAETlC,EAAWA,GAAAA,OAAAA,EAAAA,GAAMkC,CAAAA,MAOjBsB,EAAAA,SAAQR,GAAWhD,MAAAA,EAAAA,EAAAA,IAKjB8B,EAAWkB,IACblB,EAAWkB,GAAXlB,MAAAA,EAAsB7B,MAAAA,UAAAA,MAAAA,KAAAA,WAAWiC,OAAAA,CAAAA,KAO9BoB,KAAAA,cAAcC,YAAcP,EAAS,KAAKA,OAK3CD,EACKA,OAAAA;;ACrOX,IAAMY,EAAc1F,QAAS,0BAkBvB2F,EAAe,WAAS/B,IAAAA,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAEhCyB,EAAgB,GAEhBO,EAAW,CAEbJ,IAAKE,EAAYG,KAAK,CAAEd,OAAQ,MAAOnB,QAAAA,EAASyB,cAAAA,IAChDS,KAAMJ,EAAYG,KAAK,CAAEd,OAAQ,OAAQnB,QAAAA,EAASyB,cAAAA,IAClDU,MAAOL,EAAYG,KAAK,CAAEd,OAAQ,QAASnB,QAAAA,EAASyB,cAAAA,IACpDW,KAAMN,EAAYG,KAAK,CAAEd,OAAQ,OAAQnB,QAAAA,EAASyB,cAAAA,IAClDP,cAAeY,EAAYG,KAAK,CAAEd,OAAQ,gBAAiBnB,QAAAA,EAASyB,cAAAA,IACpEY,MAAOP,EAAYG,KAAK,CAAEd,OAAQ,QAASnB,QAAAA,EAASyB,cAAAA,IACpDpB,MAAOyB,EAAYG,KAAK,CAAEd,OAAQ,QAASnB,QAAAA,EAASyB,cAAAA,IACpDa,QAASR,EAAYG,KAAK,CAAEd,OAAQ,UAAWnB,QAAAA,EAASyB,cAAAA,IACxDc,OAAQT,EAAYG,KAAK,CAAEd,OAAQ,SAAUnB,QAAAA,EAASyB,cAAAA,IAEtDe,MAAOb,QAAQa,MACfC,KAAMd,QAAQc,KACdC,MAAOf,QAAQe,MACfC,QAAShB,QAAQgB,QACjBC,QAASjB,QAAQiB,QACjBC,OAAQlB,QAAQkB,OAChBC,MAAOnB,QAAQmB,MACfC,WAAYpB,QAAQoB,WACpBpD,IAAKgC,QAAQhC,IACbqD,OAAQrB,QAAQqB,OAChBC,MAAOtB,QAAQsB,MACfC,eAAgBvB,QAAQuB,eACxBC,SAAUxB,QAAQwB,UAabnB,OAVHL,QAAQyB,UACVpB,EAASoB,QAAUzB,QAAQyB,SAEzBzB,QAAQ0B,aACVrB,EAASqB,WAAa1B,QAAQ0B,YAE5B1B,QAAQ2B,YACVtB,EAASsB,UAAY3B,QAAQ2B,WAGxBtB,GAMT9F,OAAOC,QAAU4F;;ACxDjB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GANA,IAAMA,EAAe3F,QAAQ,cAEP,YAAX2D,oBAAAA,OAAAA,YAAAA,EAAAA,WACTA,OAAOiC,SAAWD,KAGpB7F,OAAOC,QAAU4F","file":"cconsole.map","sourceRoot":"../src","sourcesContent":["const destroyCircular = (from, seen) => {\n  // null seen as object\n  if (from === null || from === undefined) {\n    return from\n  }\n  // setup output variable\n  const to = Array.isArray(from) ? [] : {}\n  // reading\n  seen.push(from)\n  // iterate input\n  for (const [key, value] of Object.entries(from)) {\n    if (typeof value === 'function') {\n      continue\n    }\n    if (!value || typeof value !== 'object') {\n      to[key] = value\n      continue\n    }\n    if (!seen.includes(from[key])) {\n      to[key] = destroyCircular(from[key], seen.slice())\n      continue\n    }\n    to[key] = '[Circular]'\n  }\n  const commonProperties = [\n    'name',\n    'message',\n    'stack',\n    'code'\n  ]\n  for (const property of commonProperties) {\n    if (typeof from[property] === 'string') {\n      to[property] = from[property]\n    }\n  }\n  return to\n}\nmodule.exports = destroyCircular\n","const destroyCircular = require('./destroyCircular')\n\nmodule.exports = (value) => {\n  if (typeof value === 'object') {\n    return destroyCircular(value, [])\n  }\n  // People sometimes throw things besides Error objects…\n  if (typeof value === 'function') {\n    // `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n    return `[Function: ${(value.name || 'anonymous')}]`\n  }\n  return value\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const destroyCircular = require( \"./destroyCircular\")\nconst serializeError = require( \"./serializeError\")\n\n// use \"browser\" colors if in browser\nlet NODEJSCOLORS = typeof window !== \"object\" && typeof process===\"object\"\n// also use \"browser\" colors if in NodeJS with \"--inspect\" or \"--inspect-brk\" flag\n// if (NODEJSCOLORS && process.execArgv.join().includes(\"--inspect\")) {\n//   NODEJSCOLORS = false\n// }\n\n/*\n * Log to console\n */\nmodule.exports = function () {\n  let args = [...arguments]\n  // optionally, pass log-To-Cloud versions of each log action (log,info,error,etc.)\n  if (!this.options) this.options={}\n  let { logToCloud = {}, useTrace = false, useColor = true, separateTypes = false } = this.options\n\n  /*\n   * option:\n   * trace file:line, where log originated\n   */\n  let trace = \"\"\n  if (useTrace) {\n    let stack = []\n    let err = new Error()\n    if (err.stack) {\n      stack = err.stack.split(\"\\n\")\n      if (stack[2]) {\n        // determine file:line which called this console log\n        let str = stack[2]\n        let i_end = str.lastIndexOf(\":\")\n        let i_start_before = str.lastIndexOf(\"/\", i_end - 20) + 1\n        trace = `(${str.substring(i_start_before, i_end)})`\n      }\n    }\n  }\n\n  /*\n   * optimize message view\n   */\n  // let hasError = false\n  let a = 0\n  while (a < args.length) {\n    // if first argument is string, give it a colon \": \"\n    if (a === 0 && typeof args[a] === \"string\") {\n      if (args.length > a + 1) {\n        args[a] += \": \"\n      } else {\n        args[a] += \" \"\n      }\n    }\n    // fix object from being printed as \"[object Object]\"\n    if (typeof args[a] === \"object\") {\n      if (args[a] instanceof Error) {\n        // error object\n        // hasError = true\n        try {\n          // going to assume this is an Error\n          args[a] = serializeError(args[a])\n          if (typeof args[a] === \"object\") {\n            args[a] = serializeError(args[a].stack)\n          }\n        } catch (e) {\n          // console.error(e)\n        }\n      } else {\n        // regular object\n        // serialize so it does not display changes made after log has printed\n        args[a] = JSON.parse(JSON.stringify(destroyCircular(args[a], [])))\n      }\n    }\n    a++\n  }\n\n  /*\n   * error - prepare message for output as string\n   */\n  let error_message = ''\n  if (this.action==='error_message') {\n    args[0] = error_message = (args[0] && typeof args[0] === 'string') ? args[0].split('\\n').slice(0,2).map(str=>str.replace(/\\/.+\\//g,'')).toString() : 'error'\n    this.action = 'error'\n  }\n\n  /*\n   * color1 messages\n   *\n   * on NODE JS\n   * https://en.wikipedia.org/wiki/ANSI_escape_code#Colors <- use \"FG Code\" for text, \"BG Code\" for background\n   *\n   * \\x1b[41m     \\x1b[33m       %s        \\x1b[0m\n   * red bg       yellow text    string    escape for next line\n   *\n   * \\x1b[47m           \\x1b[30m       %s        \\x1b[0m\n   * light grey bg      black text     string    escape for next line\n   */\n  let action = this.action\n  let color1 = \"\"\n  let color2 = \"\"\n  if (useColor && typeof args[0] === \"string\") {\n    /*\n     * use by NODEJS in terminal\n     */\n    if (NODEJSCOLORS) {\n      switch (this.action) {\n        case \"error\":\n          color1 = \"\\x1b[41m\\x1b[33m%s\\x1b[0m\"\n          break\n        case \"warn\":\n          color1 = \"\\x1b[43m\\x1b[30m%s\\x1b[0m\"\n          break\n        case \"info\":\n          color1 = \"\\x1b[46m\\x1b[30m%s\\x1b[0m\"\n          break\n        case \"debug\":\n          color1 = \"\\x1b[45m\\x1b[30m%s\\x1b[0m\"\n          break\n        case \"trace\":\n          color1 = \"\\x1b[106m\\x1b[30m%s\\x1b[0m\"\n          break\n        case \"success\":\n          color1 = \"\\x1b[42m\\x1b[30m%s\\x1b[0m\"\n          this.action = \"log\"\n          break\n        case \"subtle\":\n          color1 = \"\\x1b[40m\\x1b[90m%s\\x1b[0m\"\n          this.action = \"log\"\n          break\n      }\n    } else {\n      /*\n       * for use in BROWSER\n       */\n      switch (action) {\n        case \"error\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:red; color:yellow\")\n          break\n        case \"warn\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:yellow; color:black\")\n          break\n        case \"info\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:teal; color:black\")\n          break\n        case \"debug\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:magenta; color:black\")\n          break\n        case \"trace\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:cyan; color:black\")\n          break\n        case \"success\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"background:lawngreen; color:black\")\n          break\n        case \"subtle\":\n          args[0] = \"%c\" + args[0]\n          args.splice(1, 0, \"color:grey\")\n          break\n      }\n    }\n  }\n\n  /*\n   * custom actions\n   */\n  switch (action) {\n    case \"success\":\n      action = \"log\"\n      break\n    case \"subtle\":\n      action = \"log\"\n      break\n  }\n\n  /*\n   * Add space between different types (groups) of messages\n   *    TODO: maybe upgrade this to use console.group in browser\n   */\n  if (separateTypes) {\n    if (action + this.action !== this.sharedContext.last_action) {\n      console.log(\"\")\n    }\n  }\n\n  /*\n   * Add trace (file-name:line-number)\n   */\n  // log color\n  if (color1) {\n    if (trace) {\n      // color1, trace\n      args = [color1, ...args, trace, color2]\n    } else {\n      // color1, no trace\n      args = [color1, ...args, color2]\n    }\n  } else if (trace) {\n    // no color1, trace\n    args = [...args, trace]\n  }\n\n  /*\n   * Log message to console\n   * use specified action (log, info, debug, warn, etc)\n   */\n    console[action](...args)\n\n  /*\n   * Log original content to cloud\n   */\n  if (logToCloud[action]) {\n    logToCloud[action](...arguments, trace)\n  }\n\n  /*\n   * Add linebreak when different actions back to back\n   * but no linebreak when same action\n   */\n  this.sharedContext.last_action = action + this.action\n\n  /*\n   * return\n   */\n  if (error_message) {\n    return error_message\n  }\n}\n","const CConsoleLog = require( \"./function/CConsoleLog\")\n\n/**\n * Log to console, and optionally to your custom cloud functions\n *    In console, will color code each message:\n *        info: green\n *        warn: orange\n *        error: red\n *    Other methods (log, debug, trace, table, are not colored,\n *    because the coloring breaks Chrome developer tools console message)\n *\n * @param options {object} - options and settings\n *    See github project for more documentation and examples.\n * @param options.logToCloud {object} - an object of {key:value{function},} pairs\n *    Ex: {log:function(){}, info:function(){}, etc}\n *    Tested, and works well with LogDNA. `options.logToCloud = logdna.createLogger()`\n *    See github project for more documentation and examples.\n */\nconst cconsoleInit = function(options={}) {\n  // so different actions (log/info/debug/etc) can communicate with eachother:\n  let sharedContext = {}\n  // log\n  let cconsole = {\n    // custom (colorful) loggers\n    log: CConsoleLog.bind({ action: \"log\", options, sharedContext }),\n    info: CConsoleLog.bind({ action: \"info\", options, sharedContext }),\n    debug: CConsoleLog.bind({ action: \"debug\", options, sharedContext }),\n    warn: CConsoleLog.bind({ action: \"warn\", options, sharedContext }),\n    error_message: CConsoleLog.bind({ action: \"error_message\", options, sharedContext }),\n    error: CConsoleLog.bind({ action: \"error\", options, sharedContext }),\n    trace: CConsoleLog.bind({ action: \"trace\", options, sharedContext }),\n    success: CConsoleLog.bind({ action: \"success\", options, sharedContext }),\n    subtle: CConsoleLog.bind({ action: \"subtle\", options, sharedContext }),\n    // pass-through system debugging loggers\n    clear: console.clear,\n    time: console.time,\n    table: console.table,\n    timeEnd: console.timeEnd,\n    timeLog: console.timeLog,\n    assert: console.assert,\n    count: console.count,\n    countReset: console.countReset,\n    dir: console.dir,\n    dirxml: console.dirxml,\n    group: console.group,\n    groupCollapsed: console.groupCollapsed,\n    groupEnd: console.groupEnd\n  }\n  // extra pass-through (default) loggers (non-standard)\n  if (console.profile) {\n    cconsole.profile = console.profile\n  }\n  if (console.profileEnd) {\n    cconsole.profileEnd = console.profileEnd\n  }\n  if (console.timeStamp) {\n    cconsole.timeStamp = console.timeStamp\n  }\n  // return console\n  return cconsole\n}\n\n/*\n * Export cconsole\n */\nmodule.exports = cconsoleInit\n","/*\n * This is for use in Browser - however it will also work in Node (ESM) including Webpack\n */\nconst cconsoleInit = require(\"./index.js\")\n\nif (typeof window === 'object') {\n  window.cconsole = cconsoleInit()\n}\n\nmodule.exports = cconsoleInit()\n"]}